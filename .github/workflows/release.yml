name: Release
on:
   push:
     tags:
       - 'v\d+'

jobs:
  check-tests:
    name: Run check-tests
    uses: ./.github/workflows/check-tests.yml

  create-issue:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Create changelog
        id: changelog
        uses: requarks/changelog-action@v1
        with:
          token: ${{ secrets.GH_ACCESS_TOKEN }}
          tag: ${{ github.ref_name }}
          writeToFile: false

      - name: Create issue
        id: issue
        env:
          TAG_NAME: ${{ github.ref_name }}
          GH_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
        run: |
          TITLE="Release ${{ github.ref_name }}"
          BODY=$(cat << 'EOF'

          # Release ${{ github.ref_name }}

          Автор релиза: @${{ github.actor }}
          Дата релиза: ${{ github.event.head_commit.timestamp }}
          Версия релиза: ${{ github.ref_name }}

          ## CHANGELOG
          ${{ steps.changelog.outputs.changes }}

          EOF
          )

          ISSUE_ID=$(gh issue list --json number,title -q \
            ".[] | select(.title == \"$TITLE\") | .number")
          if [ ! -z "$ISSUE_ID" ]; then
            gh issue edit $ISSUE_ID --body "$BODY"
          else
            gh issue create --title "$TITLE" --body "$BODY" --assignee ${{ github.actor }} --label "release"
            ISSUE_ID=$(gh issue list --json number,title -q \
            ".[] | select(.title == \"$TITLE\") | .number")
          fi
          echo "issueId=$ISSUE_ID" >> "$GITHUB_OUTPUT"

    outputs:
      issueNumber: ${{ steps.issue.outputs.issueId }}

  tests-log:
    name: tests-log
    runs-on: ubuntu-latest
    needs: [create-issue, check-tests]
    steps:
      - name: Comment issue with test results
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{ needs.create-issue.outputs.issueNumber }}
          body: |
            Download test results:
            ${{github.server_url}}/${{ github.repository }}/actions/runs/${{github.run_id}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-deploy:
    needs: check-tests
    name: Deploy
    runs-on: ubuntu-latest
      
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_ACCESS_TOKEN }}
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
        
      - name: Install deps
        run: npm ci
    
      - name: Build application
        env:
          BASE_URL: ${{ vars.BASE_URL }}
        run: PUBLIC_URL="${BASE_URL}" npm run build
        
        if: success()
      - uses: actions/upload-artifact@v3
        with:
          name: build
          path: build/
          retention-days: 30
        
      - name: Deploy to GitHub Pages
        id: deployment
        env:
          GITHUB_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
        run: |
          npm i gh-pages
          git remote set-url origin https://git:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
          npx gh-pages -d build -u "github-actions-bot <support+actions@github.com>"
      
        if: success()
      - name: Close Issue
        uses: peter-evans/close-issue@v3
        with:
          issue-number: ${{ needs.create-issue.outputs.issueNumber }}
          comment: |
            Close Issue
            Issue automatically closed